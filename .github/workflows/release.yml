on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ["linux", "windows"]
        goarch: ["amd64", "386", "arm64", "arm", "mips", "mips64"]
        exclude:
          - goarch: "mips"
            goos: windows
          - goarch: "mips64"
            goos: windows
    steps:
      - uses: actions/checkout@v4

      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date --iso-8601=seconds) >> ${GITHUB_ENV}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Build UI
        run: |
          cd ui
          npm ci
          npm run build --if-present

      - uses: wangyoucao577/go-release-action@v1.46
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.22.0
          md5sum: false
          overwrite: true
          project_path: "./cmd/gameapctl"
          ldflags: -X "github.com/gameap/gameapctl/pkg/gameap.Version=${{ env.APP_VERSION }}" -X "github.com/gameap/gameapctl/pkg/gameap.BuildDate=${{ env.BUILD_TIME }}"
          binary_name: "gameapctl"
